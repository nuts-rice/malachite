[workspace]
resolver = "2"

members = [
  "crates/app",
  "crates/app-channel",
  "crates/codec",
  "crates/config",
  "crates/core-consensus",
  "crates/core-driver",
  "crates/core-state-machine",
  "crates/core-types",
  "crates/core-votekeeper",
  "crates/engine",
  "crates/metrics",
  "crates/network",
  "crates/peer",
  "crates/proto",
  "crates/sync",
  "crates/wal",

  # Signing scheme
  "crates/signing-ed25519",

  # Test
  "crates/test",
  "crates/test/cli",
  "crates/test/mbt",
  "crates/test/mempool",
  "crates/network/test",

  # Starknet
  "crates/starknet/*",
  "crates/starknet/*",

  # Examples
  "examples/channel",
]

[workspace.package]
version      = "0.0.1"
edition      = "2021"
readme       = "README.md"
repository   = "https://github.com/informalsystems/malachite"
license      = "Apache-2.0"
publish      = true
rust-version = "1.82"

[profile.dev]
opt-level = 1

[profile.release]
lto = "thin"
overflow-checks = true

[profile.profiling]
inherits = "release"
debug = true

[workspace.lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(coverage_nightly)'] }

[workspace.dependencies]
malachitebft-engine             = { version = "0.0.1", package = "informalsystems-malachitebft-engine", path = "crates/engine" }
malachitebft-app                = { version = "0.0.1", package = "informalsystems-malachitebft-app", path = "crates/app" }
malachitebft-app-channel        = { version = "0.0.1", package = "informalsystems-malachitebft-app-channel", path = "crates/app-channel" }
malachitebft-test-cli           = { version = "0.0.1", package = "informalsystems-malachitebft-test-cli", path = "crates/test/cli" }
malachitebft-codec              = { version = "0.0.1", package = "informalsystems-malachitebft-codec", path = "crates/codec" }
malachitebft-config             = { version = "0.0.1", package = "informalsystems-malachitebft-config", path = "crates/config" }
malachitebft-core-consensus     = { version = "0.0.1", package = "informalsystems-malachitebft-core-consensus", path = "crates/core-consensus" }
malachitebft-core-driver        = { version = "0.0.1", package = "informalsystems-malachitebft-core-driver", path = "crates/core-driver" }
malachitebft-core-state-machine = { version = "0.0.1", package = "informalsystems-malachitebft-core-state-machine", path = "crates/core-state-machine" }
malachitebft-core-types         = { version = "0.0.1", package = "informalsystems-malachitebft-core-types", path = "crates/core-types" }
malachitebft-core-votekeeper    = { version = "0.0.1", package = "informalsystems-malachitebft-core-votekeeper", path = "crates/core-votekeeper" }
malachitebft-discovery          = { version = "0.0.1", package = "informalsystems-malachitebft-discovery", path = "crates/discovery" }
malachitebft-network            = { version = "0.0.1", package = "informalsystems-malachitebft-network", path = "crates/network" }
malachitebft-metrics            = { version = "0.0.1", package = "informalsystems-malachitebft-metrics", path = "crates/metrics" }
malachitebft-peer               = { version = "0.0.1", package = "informalsystems-malachitebft-peer", path = "crates/peer" }
malachitebft-proto              = { version = "0.0.1", package = "informalsystems-malachitebft-proto", path = "crates/proto" }
malachitebft-signing-ed25519    = { version = "0.0.1", package = "informalsystems-malachitebft-signing-ed25519", path = "crates/signing-ed25519" }
malachitebft-sync               = { version = "0.0.1", package = "informalsystems-malachitebft-sync", path = "crates/sync" }
malachitebft-wal                = { version = "0.0.1", package = "informalsystems-malachitebft-wal", path = "crates/wal" }

# Test
malachitebft-test                   = { version = "0.0.1", package = "informalsystems-malachitebft-test", path = "crates/test" }
malachitebft-test-mbt               = { version = "0.0.1", package = "informalsystems-malachitebft-test-mbt", path = "crates/test/mbt" }
malachitebft-test-mempool           = { version = "0.0.1", package = "informalsystems-malachitebft-test-mempool", path = "crates/test/mempool" }
malachitebft-discovery-test         = { version = "0.0.1", package = "informalsystems-malachitebft-discovery-test", path = "crates/network/test" }

# Starknet
malachitebft-starknet-host      = { version = "0.0.1", package = "informalsystems-malachitebft-starknet-host", path = "crates/starknet/host" }
malachitebft-starknet-app       = { version = "0.0.1", package = "informalsystems-malachitebft-starknet-app", path = "crates/starknet/app" }
malachitebft-starknet-p2p-proto = { version = "0.0.1", package = "informalsystems-malachitebft-starknet-p2p-proto", path = "crates/starknet/p2p-proto" }
malachitebft-starknet-p2p-types = { version = "0.0.1", package = "informalsystems-malachitebft-starknet-p2p-types", path = "crates/starknet/p2p-types" }

# Starknet
starknet-core   = "0.11.1"
starknet-crypto = "0.7.3"

advisory-lock      = "0.3.0"
async-recursion    = "1.1"
async-trait        = "0.1.85"
axum               = "0.7"
base64             = "0.22.0"
bs58               = "0.5.1"
bytes              = { version = "1", default-features = false }
byteorder          = "1.5"
bytesize           = "1.3"
clap               = "4.5"
color-eyre         = "0.6"
config             = { version = "0.14", features = ["toml"], default-features = false }
crc32fast          = "1.4.0"
criterion          = "0.5.1"
dashmap            = "6.1.0"
derive-where       = "1.2.7"
directories        = "5.0.1"
displaydoc         = { version = "0.2", default-features = false }
ed25519-consensus  = "2.1.0"
either             = "1"
eyre               = "0.6"
futures            = "0.3"
genawaiter         = { version = "0.99.1", default-features = false }
glob               = "0.3.0"
hex                = { version = "0.4.3", features = ["serde"] }
humantime          = "2.1.0"
humantime-serde    = "1.1.1"
itertools          = "0.13"
itf                = "0.2.3"
libp2p             = { version = "0.54.1", features = ["macros", "identify", "tokio", "ed25519", "ecdsa", "tcp", "quic", "noise", "yamux", "gossipsub", "dns", "ping", "metrics", "request-response", "cbor", "serde", "kad"] }
libp2p-identity    = "0.2.10"
libp2p-broadcast   = { version = "0.1.1", package = "libp2p-scatter" }
multiaddr          = "0.18.2"
multihash          = { version = "0.19.3", default-features = false }
nix                = { version = "0.29.0", features = ["signal"] }
num-bigint         = "0.4.4"
num-traits         = "0.2.17"
pretty_assertions  = "1.4"
prometheus-client  = "0.22"
prost              = "0.13"
prost-build        = "0.13"
prost-types        = "0.13"
ractor             = { version = "0.13.4", default-features = false, features = ["tokio_runtime"] }
rand               = { version = "0.8.5", features = ["std_rng"] }
rand_chacha        = "0.3.1"
redb               = "2.4.0"
seahash            = "4.1"
serde              = "1.0"
serde_json         = "1.0"
serde_with         = "3.9"
sha3               = "0.10"
signature          = "2.2.0"
tempfile           = "3.15.0"
testdir            = "0.9.1"
thiserror          = { version = "2.0", default-features = false }
tikv-jemallocator  = "0.6.0"
time               = "0.3"
tokio              = "1.43.0"
tokio-stream       = "0.1"
toml               = "0.8.19"
tracing            = "0.1.41"
tracing-appender   = "0.2.3"
tracing-subscriber = { version = "0.3.18", features = ["env-filter"] }
